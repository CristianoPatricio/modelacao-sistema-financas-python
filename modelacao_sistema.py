import random
import datetime

# OBJETIVO: Pretende-se construir e implementar um modelo de simulação de um sistema relacionado 
# com o funcionamento do Serviço de Atendimento de uma Repartição de Finanças, para averiguar o 
# desempenho da solução apresentada.

###### SECÇÃO DAS FUNÇÕES ######

# OBJETIVO: gerar o número de clientes (entre 120 e 150)
# RETURN: número de clientes (nCliente)
def getNumeroClientes():    
    return random.randrange(120,150)

# numero de clientes
nClientes =  getNumeroClientes()

# OBJETIVO: função que gera números entre 0 e 1 para um dado n. de clientes
# PARAMETROS: seed -> Seed value is the previous value number generated by the generator. (Ajustar p/ as %)
#             nCLientes -> número de clientes        
# RETURN: lista com os nClientes números aleatórios entre 0 e 1
def getListNumerosEntre0e1(seed, nClientes):
    listNum01 = []

    # definir o valor de seed
    random.seed(seed)
    for x in range (1,nClientes):
        # gerar um numero aleatorio entre 0 e 1
        num = random.random()
        listNum01.append(num)
        
    return listNum01

# OBJETIVO: função que gera os clientes considerados prioritários
# PARAMETROS: listNumbers -> lista de números aleatórios entre 0 e 1
# RETURN: lista com os clientes considerados prioritários (cada valor representa um índice a ser 
# usado posteriormente na lista dos tempos de chegada, permitindo, desta forma, saber o tempo de chegada de um cliente prioritário)
def getClientesPrioritarios(listNumbers):
    listPrioritarios = []

    for num in listNumbers:
        # 20% dos utentes são considerados prioritários logo na 1ª fase, mantendo este propriedade até partirem (abandonarem) do sistema
        if num >= 0 and num <= 0.2:
            listPrioritarios.append(random.randrange(0,nClientes-1))
    
    return listPrioritarios

# OBJETIVO: função que gera os tempos de chegada
# PARAMETROS: listNumbers -> lista de números aleatórios entre 0 e 1
# RETURN: lista com os tempos de chegada para os nClientes 
def getTemposChegada(listNumbers):
    # lista c/ tempos das 9h -> 11h
    listInt1 = []
    # lista c/ tempos das 11h -> 13h
    listInt2 = []
    # lista c/ tempos das 13h -> 15h
    listInt3 = []
    # lista c/ tempos das 15h -> 17h
    listInt4 = []

    for num in listNumbers:
        if num >= 0 and num <= 0.1:
            # gerar um numero entre 0 e 7200
            listInt1.append(random.randrange(0,7200))
        elif num >= 0.11 and num <= 0.35:
            # gerar um numero entre 7201 e 14400
            listInt2.append(random.randrange(7201,14400))
        elif num >= 0.36 and num <= 0.80:
            # gerar um numero entre 14401 e 21600
            listInt3.append(random.randrange(14401,21600))
        else:
            # gerar um numero entre 21601 e 28800
            listInt4.append(random.randrange(21601,28800))

    return listInt1 + listInt2 + listInt3 + listInt4 

# OBJETIVO: função que gera os tempos de triagem
# PARAMETROS: seed -> Seed value is the previous value number generated by the generator. (Ajustar p/ as %)
# RETURN: lista com os tempos de triagem para os nClientes 
def getTemposTriagem(listNumbers):
    listTemposTriagem = []
    
    for num in listNumbers:
        if num >= 0 and num <= 0.55:
            listTemposTriagem.append(random.randrange(1,60))
        elif num >= 0.56 and num <= 0.90:
            listTemposTriagem.append(random.randrange(60,120))
        else:
            listTemposTriagem.append(random.randrange(120,180))
    
    return listTemposTriagem 

# OBJETIVO: função que gera os clientes que passam da 1.ª para 3.ª fase
# PARAMETROS: listNumbers -> lista de números aleatórios entre 0 e 1
# RETURN: lista com os tempos de chegada dos clientes que passam da 1.ª para a 2.ª fase 
def getClientes1para3Fase(listNumbers):
    listClientes1para3Fase = []
    
    for num in listNumbers:
        # 10% dos utentes passam da 1ª fase diretamente para a 3ª fase
        if num >= 0 and num <= 0.1:
            listClientes1para3Fase.append(random.randrange(0,nClientes-1))

    return listClientes1para3Fase

##### RESULTADOS #####

# lista com números aleatórios entre 0 e 1
listaNumerosEntre0e1 = getListNumerosEntre0e1(12,nClientes)

# lista com os tempos de chegada
temposChegada = getTemposChegada(listaNumerosEntre0e1)
temposChegada.sort()

# lista com os clientes prioritários
indicesClientesPrioritarios = getClientesPrioritarios(listaNumerosEntre0e1)
clientesPrioritarios = []
for i in range(len(indicesClientesPrioritarios)):
    clientesPrioritarios.append(temposChegada[indicesClientesPrioritarios[i]])
clientesPrioritarios.sort()

# lista com os clientes gerais
clientesGerais = list(set(temposChegada) - set(clientesPrioritarios))
clientesGerais.sort()

# lista com os tempos de triagem
listaNumerosEntre0e1 = getListNumerosEntre0e1(10,nClientes)
temposTriagem = getTemposTriagem(listaNumerosEntre0e1)
temposTriagemBackup = temposTriagem

# lista com os clientes que passam da 1.ª para a 3.ª fase
listaNumerosEntre0e1 = getListNumerosEntre0e1(10,nClientes)
clientes1para3fase = getClientes1para3Fase(listaNumerosEntre0e1)
print(clientes1para3fase)

##### ESCRITA DE DADOS NO FICHEIRO #####

# abrir o ficheiro p/ escrita (ficheiro de log que contém todas as variáveis do programa)
f = open("log_file.txt","w")

# escrever data atual no ficheiro
dateNow = datetime.datetime.now()
f.write("[Date] %s\r\n" % dateNow.strftime("%c"))

# escrever o numero de clientes no ficheiro
f.write("[nClientes]: %d\n" % nClientes)

tabelaClientes = []

f.write("\r")
f.write("[Tabela Dados Clientes]\n")
f.write("[No.Cliente | Tempo Chegada | Tempo Triagem | Tipo de Assunto]\n")
for x in range (0,nClientes-1):
    dados = []
    if temposChegada[x] in clientesGerais:
        dados.append("G")
    else:
        dados.append("P")
    dados.append(temposChegada[x])
    randomTempoTriagem = random.choice(list(temposTriagem))
    dados.append(randomTempoTriagem)
    temposTriagem.remove(randomTempoTriagem)
    """ for z in range(len(clientes1para3fase)):
        if (x == clientes1para3fase[z]):
            dados.append("-")
        else:
            dados.append("PostoX") """
    tabelaClientes.append(dados)

# escrever a tabela com os dados dos clientes
for i in range(len(tabelaClientes)):
    f.write("%s \n" % tabelaClientes[i])
	

""" # lista de tempos de chegada
f.write("\r")
f.write("[Tempos de Chegada]\n")
for i in range(len(temposChegada)):
    if (i % 10 == 0 and i != 0):
        f.write("\n")
    f.write("%s " % temposChegada[i])

# lista de clientes prioritarios
f.write("\r\n")
f.write("[Tempos de Chegada Clientes Prioritarios]\n")
for i in range(len(clientesPrioritarios)):
    if (i % 10 == 0 and i != 0):
        f.write("\n")
    f.write("%s " % clientesPrioritarios[i])

# lista de clientes gerais
f.write("\r\n")
f.write("[Tempos de Chegada Clientes Gerais]\n")
for i in range(len(clientesGerais)):
    if (i % 10 == 0 and i != 0):
        f.write("\n")
    f.write("%s " % clientesGerais[i])

# lista tempos de triagem
f.write("\r\n")
f.write("[Tempos de Triagem]\n")
for i in range(len(temposTriagem)):
    if (i % 10 == 0 and i != 0):
        f.write("\n")
    f.write("%s " % temposTriagem[i]) """

# fechar o ficheiro
f.close()